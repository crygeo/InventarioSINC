<#@ template language="C#" debug="false" hostspecific="true" #>
<#@ output extension=".g.cs" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Reflection" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>


//
//    ✔ Genera controladores basados en archivos .cs en /Model
//    ❌ Ignora modelos que ya tienen controladores manuales (basado en el nombre de archivo)
//    📁 Requiere:
//        - Este archivo .tt en carpeta /Controllers
//        - Modelos en carpeta /Model
//    ✨ No requiere cargar ensamblados, funciona solo con nombres de archivo.
//    ⚠️ No se recomienda para producción, solo para desarrollo y pruebas rápidas
//
//	  📅 Última actualización: 2025-06-06
//    🛠️ Creado por ChatGPT + CryGeo
//


<#

string carpetaModelos = Path.Combine(Host.ResolvePath("."), @"..\Model\");
string carpetaControladores = Path.Combine(Host.ResolvePath("."), @"");
if (!Directory.Exists(carpetaModelos)){
    #>// ERROR: No se encontró la carpeta de los modelos: <#= carpetaModelos #><#
}

if (!Directory.Exists(carpetaControladores)){
    #>// ERROR: No se encontró la carpeta de los controladores: <#= carpetaControladores #><#
}

// Obtener todos los archivos model.cs
var archivos = Directory.GetFiles(carpetaModelos, "*.cs");

// Ruta a la carpeta donde están tus controladores manuales

var nombresConControladorManual = Directory.GetFiles(carpetaControladores, "*Controller.cs")
    .Select(path => Path.GetFileNameWithoutExtension(path)?.Replace("Controller", ""))
    .Where(nombre => !string.IsNullOrWhiteSpace(nombre))
    .ToHashSet(StringComparer.OrdinalIgnoreCase);


#>
// Codigo generado automáticamente por GenerarControladores.tt
// No modificar este archivo directamente, edita el archivo .tt para regenerar los controladores
// Requiere los siguientes espacios de nombres

using Microsoft.AspNetCore.Mvc;
using Servidor.Controllers;
using Servidor.src.Controllers;
using Servidor.src.Model;

namespace Servidor.src.Controllers.AutoGenerados;<#

foreach (var archivo in archivos)
{

        string nombreArchivo = Path.GetFileNameWithoutExtension(archivo);
        if (nombresConControladorManual.Contains(nombreArchivo))
        continue;
        #>

[ApiController]
[Route("api/[controller]")]
public class <#= nombreArchivo #>Controller : BaseController<<#= nombreArchivo #>> { }

<#
}
#>